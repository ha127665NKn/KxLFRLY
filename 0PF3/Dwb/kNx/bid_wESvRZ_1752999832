以下是优化后的源代码：

```java
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 JUXT LTD.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
```

以下是实现登录流程和校验管理员权限的伪代码：

```javascript
// 登录流程
function login(username, password) {
  // 1. 验证用户名和密码是否为空
  if (!username || !password) {
    return { success: false, message: "用户名和密码不能为空" };
  }

  // 2. 查询数据库，校验用户名和密码是否正确
  const user = database.getUserByUsername(username);
  if (!user || user.password !== password) {
    return { success: false, message: "用户名或密码错误" };
  }

  // 3. 生成token，并存储到数据库
  const token = generateToken();
  database.saveToken(username, token);

  // 4. 返回成功结果和token
  return { success: true, message: "登录成功", token: token };
}

// 校验管理员权限
function checkAdminPermission(token) {
  // 1. 从数据库获取用户信息
  const user = database.getUserByToken(token);

  // 2. 校验用户是否存在
  if (!user) {
    return { success: false, message: "用户不存在" };
  }

  // 3. 校验用户是否为管理员
  if (user.role !== "admin") {
    return { success: false, message: "无管理员权限" };
  }

  // 4. 返回成功结果
  return { success: true, message: "管理员权限校验成功" };
}
```

```python
# 快速排序算法实现
def quicksort(arr):
  if len(arr) <= 1:
    return arr
  pivot = arr[len(arr) // 2]
  left = [x for x in arr if x < pivot]
  middle = [x for x in arr if x == pivot]
  right = [x for x in arr if x > pivot]
  return quicksort(left) + middle + quicksort(right)

# 测试快速排序
arr = [3, 6, 8, 10, 1, 2, 1]
sorted_arr = quicksort(arr)
print("Sorted array:", sorted_arr)
```